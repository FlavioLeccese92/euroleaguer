[{"path":"https://flavioleccese92.github.io/euroleaguer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Flavio Leccese Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-goals-by-time.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Team goals by time of action","text":"want create chart team showing field-goals percentage overall attempts time period action. Periods Opening (second 1 6), Early (6 12), Late (12 18) Ending (18 24). Second opportunities included. Data can obtained getPlayByPlay function. Note results may slightly incorrect since events traced Euroleague (foot interference similia), sometimes clock reset unknown. Resulted plot can found bottom page.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-goals-by-time.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Team goals by time of action","text":"","code":"library(euroleaguer) library(tidyr) library(dplyr) library(ggplot2) library(ggtext) library(showtext) library(ggimage) library(glue) library(geomtextpath)  # Add Lato font (Euroleague official font) font_add_google(\"Lato\", \"Lato\") font_add_google(\"Inconsolata\", \"Inconsolata\")  # Add Font Awesome for logos font_add(family = \"Font Awesome 6 Brands\",          regular = \"figures/fa-brands-400.ttf\") showtext_opts(dpi = 200) showtext_auto()"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-goals-by-time.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Team goals by time of action","text":"","code":"CompetitionRounds <- getCompetitionRounds(\"E2024\") %>%   filter(Sys.Date() >= MaxGameStartDate)  MaxRound <- max(CompetitionRounds$Round) MaxGameDate <- format(as.Date(max(CompetitionRounds$MaxGameStartDate)),                       '%d %b %Y')  CompetitionStandings <- getCompetitionStandings(\"E2024\", MaxRound) CompetitionGames <- getCompetitionGames(\"E2024\", CompetitionRounds$Round) %>%    filter(Status == \"result\")  PlayByPlay <- getGamePlayByPlay(\"E2024\", CompetitionGames$GameCode)$PlayByPlay"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-goals-by-time.html","id":"data-for-plot","dir":"Articles","previous_headings":"","what":"Data for plot","title":"Team goals by time of action","text":"","code":"PlayByPlay = PlayByPlay %>%    mutate(Minutes = sub(\"\\\\:.*\", \"\", Markertime) %>% as.numeric(),          Seconds = sub(\".*\\\\:\", \"\", Markertime) %>% as.numeric(),          Markertime = (600 - (Minutes*60 + Seconds)) %>%             ifelse(PlayType %in% c(\"EP\", \"EG\"), 600, .) %>%             ifelse(PlayType == \"BP\", 0, .),          PlayInfo = gsub(\"\\\\s*\\\\([^\\\\)]+\\\\)\", \"\", PlayInfo),          Possession = case_when(PlayType %in% c(\"BP\", \"TO\", \"CM\", \"FV\") ~ lead(TeamCode, 1),                                 PlayType %in% c(\"JB\", \"2PM\", \"3PM\", \"D\", \"O\", \"2PA\", \"3PA\", \"AS\", \"ST\", \"AG\", \"RV\", \"FTA\", \"FTM\", \"OF\") ~ TeamCode,                                 PlayType %in% c(\"EG\", \"EP\") ~ lag(TeamCode, 1),                                 TRUE ~ NA),          SecondChance = case_when(PlayType %in% c(\"O\") ~ 1,                                   TRUE ~ 0)) %>%    arrange(GameCode, Quarter, Markertime) %>%   fill(Possession) %>%    group_by(GameCode, Quarter) %>%   mutate(PossessionId = cumsum(ifelse(Possession == lag(Possession, 1, \"\"), 0, 1)),          Markertime_lag = lag(Markertime, 1, 0)) %>%   group_by(GameCode, Quarter, PossessionId) %>%    mutate(Chance = cumsum(SecondChance) + 1) %>% ungroup() %>%    group_by(GameCode, Quarter) %>%   mutate(PossessionId = cumsum(ifelse(Possession == lag(Possession, 1, \"\") &                                         Chance == lag(Chance, 1, 0), 0, 1))) %>%    ungroup() %>%   group_by(GameCode, Quarter, PossessionId) %>%   mutate(ActionStart = min(Markertime_lag, na.rm = TRUE),           ActionEnd = max(Markertime),          ActionMarker = Markertime - ActionStart) %>%   ungroup() %>%    fill(ActionStart, .direction = \"down\") %>%    fill(ActionEnd, .direction = \"up\") %>%    select(GameCode, Quarter, Markertime, ActionMarker, TeamCode, PlayType, PlayInfo,           PossessionId, ActionStart, ActionEnd, Possession, Chance)  %>%   left_join(CompetitionStandings %>%               select(TeamCode, TeamName, TeamImagesCrest, Position),             by = \"TeamCode\") %>%   arrange(Position) %>%   mutate(TeamName = glue(\"{TeamName} #{Position}\")) %>%   mutate(TeamName = factor(TeamName, levels = unique(.$TeamName)))   Goals = PlayByPlay %>%   filter(PlayType %in% c(\"2PM\", \"3PM\", \"2PA\", \"3PA\"),          ActionMarker < 24,          Chance == 1) %>%    mutate(GoalValue =  gsub('\\\\D+','', PlayType),          MissedMade = ifelse(grepl(\"PA\", PlayType), \"Missed\", \"Made\"),          ActionMarker = cut(ActionMarker, include.lowest = TRUE,                              breaks = seq(0, 24, 6))) %>%   group_by(TeamName, ActionMarker, GoalValue, MissedMade) %>%    summarise(Count = n(), .groups = \"drop\") %>%    group_by(TeamName,  ActionMarker, GoalValue) %>%    mutate(TotalCount = sum(Count)) %>% ungroup() %>%    mutate(MaxCount = max(TotalCount)) %>% ungroup() %>%    pivot_wider(names_from = MissedMade, values_from = Count, values_fill = 0) %>%    mutate(Missed = Missed/MaxCount %>% ifelse(GoalValue == 3, -1*., .),          Made = Made/MaxCount %>% ifelse(GoalValue == 3, -1*., .)) %>%    pivot_longer(cols = c(\"Missed\", \"Made\"), names_to = \"MissedMade\", values_to = \"Percentage\") %>%   mutate(MissedMade = factor(MissedMade, levels = c(\"Missed\", \"Made\")))  Labels = Goals %>%    group_by(TeamName,  ActionMarker, GoalValue) %>%    mutate(y = sum(Percentage)) %>% ungroup() %>%    filter(MissedMade == \"Made\") %>%   mutate(Percent = scales::percent_format(accuracy = 0.01)(abs(Percentage/y)),          Label = ifelse(GoalValue == 2,                          glue(\"{TotalCount}\\n{Percent}\"),                          glue(\"{Percent}\\n{TotalCount}\"))) %>%    select(TeamName, ActionMarker, y, Label, GoalValue)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-goals-by-time.html","id":"image-for-plot","dir":"Articles","previous_headings":"","what":"Image for plot","title":"Team goals by time of action","text":"","code":"TeamImage <- PlayByPlay %>%   filter(!is.na(TeamImagesCrest)) %>%   distinct(TeamName, TeamImagesCrest) %>%    mutate(x = 1, y = 1.05)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-goals-by-time.html","id":"title-subtitle-and-caption","dir":"Articles","previous_headings":"","what":"Title, subtitle and caption","title":"Team goals by time of action","text":"","code":"PlotTitle <- glue(   \"<span style = 'font-size: 32px'>Team 2 and 3 goals by action time<\/span><br>   <span style = 'font-size: 20px'>All teams | Up to round {MaxRound} | {MaxGameDate}<\/span>\")  PlotSubtitle <- glue(   \"<span><img src = 'figures/euroleague-logo-vertical.png'   height='50'><\/span>\")  PlotCaption <- glue(   \"<span>Visualization with <\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>R<\/span>   <span>and<\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>ggplot2<\/span>   <span>by Flavio Leccese |<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf09b;<\/span>   <span>flavioleccese92<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf08c;<\/span>   <span>flavioleccese<\/span>\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-goals-by-time.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Team goals by time of action","text":"","code":"# Initialize e <- Goals %>%   ggplot(aes(x = as.numeric(ActionMarker)))  # Draw bars of stats e <- e +   geom_bar(aes(y = Percentage, group = MissedMade, fill = MissedMade), colour = \"#f2f2f2\", stat = \"identity\")  # Add labels and Team image e <- e +   geom_text(data = Labels %>% filter(GoalValue == 2), vjust = -0.2, size = 3, color = \"#404040\",             aes(x = as.numeric(ActionMarker), y = y, label = Label)) +   geom_text(data = Labels %>% filter(GoalValue == 3), vjust = 1.2, size = 3, color = \"#404040\",             aes(x = as.numeric(ActionMarker), y = y, label = Label)) +   geom_image(data = TeamImage, aes(y = y, x = x, image = TeamImagesCrest), size = 0.18,              image_fun = function(img) { magick::image_crop(img) })  # Facet by team + general theme setting e <- e +   scale_fill_manual(name = \"Attempt\", values = c(\"Missed\" = \"#C70D3A\", \"Made\" = \"#2EB086\")) +   scale_y_continuous(breaks = c(-0.1, 0.1), labels = c(\"3FG\", \"2FG\"),                      limits = c(-0.9, 1.3), position = \"right\") +   scale_x_continuous(breaks = 1:4, labels = c(\"Opening\\n1-6s\", \"Early\\n6-12s\", \"Late\\n12-18s\", \"Ending\\n18-24s\")) +   facet_wrap(~ TeamName, ncol = 6) +   theme(     # General     panel.grid.major = element_blank(),     panel.grid.minor = element_blank(),     panel.background = element_rect_round(fill = \"#e2e7ea\"),     plot.background = element_rect(fill = \"#f2f2f2\", colour = \"transparent\"),     plot.margin = margin(28, 15, 18, 15),     text = element_text(color = \"#404040\", family = \"Lato\"),     # Axis labels     axis.ticks = element_blank(),     axis.title.y = element_blank(),     axis.text.y = element_text(hjust = 0),     axis.title.x = element_blank(),     axis.text.x = element_text(vjust = 0),     # Legend     legend.background = element_blank(),     legend.box.background = element_blank(),     legend.key = element_blank(),     legend.position = 'bottom',     legend.justification = 'left',     legend.direction = 'horizontal',     legend.margin = margin(25, 0, -7, 0),     legend.box.spacing = unit(0, \"pt\"),     # Title, subtitle, caption     plot.title = element_markdown(       lineheight = 1, size = 24, hjust = 0, vjust = 1, margin = margin(0, 0, -20, 0)),     plot.title.position = \"plot\",     plot.subtitle = element_markdown(       hjust = 1, margin = margin(-33, 3, -50, 0)),     plot.caption = element_markdown(       size = 12, margin = margin(-15, 0, 0, 3)),     plot.caption.position = \"plot\",     # Facets     strip.background = element_rect(fill = \"#F47321\"),     strip.text = element_text(colour = \"black\", hjust = 0)   ) + labs(title = PlotTitle, subtitle = PlotSubtitle, caption = PlotCaption,      x = \"\", y = \"\")"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Standings team race","text":"want create chart team showing progression standings final competition score. Data can obtained getCompetitionStandings function. Resulted plot can found bottom page.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Standings team race","text":"","code":"library(euroleaguer) library(tidyr) library(dplyr) library(ggplot2) library(ggtext) library(showtext) library(ggimage) library(glue) library(geomtextpath) library(hexbin)  # Add Lato font (Euroleague official font) font_add_google(\"Lato\", \"Lato\") font_add_google(\"Inconsolata\", \"Inconsolata\")  # Add Font Awesome for logos font_add(family = \"Font Awesome 6 Brands\",          regular = \"figures/fa-brands-400.ttf\") showtext_opts(dpi = 200) showtext_auto()"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Standings team race","text":"","code":"CompetitionRounds <- getCompetitionRounds(\"E2024\") %>%   filter(Sys.Date() >= MaxGameStartDate)  CompetitionStandings <- getCompetitionStandings(\"E2024\", CompetitionRounds$Round)  MaxRound <- max(CompetitionStandings$Round) MaxGameDate <- CompetitionRounds %>% filter(Round == MaxRound) %>% pull(MaxGameStartDate) %>%    format(., '%d %b %Y') NRounds <- 10 MinRound <- MaxRound - NRounds  Teams <- getTeam(\"E2024\", unique(CompetitionStandings$TeamCode))"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"data-for-plot","dir":"Articles","previous_headings":"","what":"Data for plot","title":"Standings team race","text":"","code":"CompetitionStandings <-    CompetitionStandings %>%   left_join(Teams %>% select(TeamCode, PrimaryColor, SecondaryColor),             by = \"TeamCode\") %>%   left_join(CompetitionStandings %>% filter(Round == MaxRound) %>%               arrange(desc(Position)) %>%               mutate(                 gp = ifelse(max(GamesPlayed) != min(GamesPlayed), glue(\" {GamesPlayed} gp\"), \"\"),                 y = factor(glue(\"**#{Position}** ({GamesWon*2} pts{gp}) - {TeamName}\"),                                 levels = glue(\"**#{Position}** ({GamesWon*2} pts{gp}) - {TeamName}\"))) %>%               select(y, Position),             by = \"Position\") %>%   filter(Round %in% (MaxRound - NRounds):MaxRound) %>%    mutate(x = Round)  LastRound <- CompetitionStandings %>% filter(Round == MaxRound) PreviousRounds <- CompetitionStandings %>% filter(Round < MaxRound)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"image-for-plot","dir":"Articles","previous_headings":"","what":"Image for plot","title":"Standings team race","text":"","code":"TeamImage <- CompetitionStandings %>%   slice_max(order_by = Round) %>%   filter(!is.na(TeamImagesCrest)) %>%   distinct(x, y, TeamName, TeamImagesCrest)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"playoffs-and-playins","dir":"Articles","previous_headings":"","what":"Playoffs and playins","title":"Standings team race","text":"","code":"PlayInsOff = LastRound %>%   filter(Position %in% c(6, 10)) %>%    mutate(Label = ifelse(Position == 10, \"Play-In\", \"Playoffs\")) %>%    select(Label, y)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"title-subtitle-and-caption","dir":"Articles","previous_headings":"","what":"Title, subtitle and caption","title":"Standings team race","text":"","code":"PlotTitle <- glue(   \"<span style = 'font-size: 32px'>Team standings by round<\/span><br>   <span style = 'font-size: 20px'>All teams | From round {MaxRound - NRounds} to round {MaxRound} | {MaxGameDate}<\/span>\")  PlotSubtitle <- glue(   \"<span><img src = 'figures/euroleague-logo-vertical.png'   height='50'><\/span>\")  PlotCaption <- glue(   \"<span>Visualization with <\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>R<\/span>   <span>and<\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>ggplot2<\/span>   <span>by Flavio Leccese |<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf09b;<\/span>   <span>flavioleccese92<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf08c;<\/span>   <span>flavioleccese<\/span>\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-standings-race.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Standings team race","text":"","code":"# Initialize e <- CompetitionStandings %>%   ggplot(aes(x = x, y = y))  # Add vertical lines e <- e +   geom_vline(data = PreviousRounds, aes(xintercept = x), colour =  \"#f2f2f2\")  # Add standing lines by team e <- e +   geom_line(stat = \"smooth\", method = \"loess\", formula = 'y ~ x',             aes(colour = SecondaryColor, group = TeamName),              alpha = 0.50, linewidth = 1.25, se = FALSE, span = 0.25) +   geom_line(stat = \"smooth\", method = \"loess\", formula = 'y ~ x',             aes(colour = PrimaryColor, group = TeamName),              alpha = 0.50, linewidth = 1.25, se = FALSE, span = 0.25)  # Add points by round and team e <- e +   geom_point(data = PreviousRounds, aes(colour = SecondaryColor), alpha = 0.50, size = 3) +   geom_point(data = PreviousRounds, aes(colour = PrimaryColor), alpha = 0.50, size = 3) +   geom_point(data = PreviousRounds, colour = \"#f2f2f2\", size = 1) +   geom_point(data = LastRound, aes(colour = SecondaryColor), alpha = 0.50, size = 12) +   geom_point(data = LastRound, aes(colour = PrimaryColor), alpha = 0.50, size = 12) +   geom_point(data = LastRound, colour = \"#f2f2f2\", size = 10)  # Add lines of Play-In and Playoffs e <- e +   geom_rect(aes(xmin = -Inf, xmax = MinRound - 0.25,                  ymin = -Inf, ymax = +Inf),             fill = \"#f2f2f2\", color = NA) +   geom_hline(data = PlayInsOff, aes(yintercept = as.numeric(y) - 0.5), colour = \"#F47321\",               linetype = \"dashed\") +   geom_text(data = PlayInsOff, angle = 90, hjust = 0, colour = \"#F47321\",             aes(label = Label, y = as.numeric(y) - 0.25, x = MinRound - 0.5))  # Add images + general theme setting e <- e +   geom_image(data = TeamImage, aes(y = y, image = TeamImagesCrest), size = 0.03,              image_fun = function(img) { magick::image_crop(img) }) +   scale_colour_identity() +   scale_y_discrete(position = \"right\") +   scale_x_continuous(breaks = MinRound:MaxRound, labels = MinRound:MaxRound,                      min = MinRound, expand = c(0.01, 0.1)) +   theme(     # General     panel.grid.major = element_blank(),     panel.grid.minor = element_blank(),     panel.background = element_rect(fill = \"#e2e7ea\"),     plot.background = element_rect(fill = \"#f2f2f2\", colour = \"transparent\"),     plot.margin = margin(28, 15, 28, 17),     text = element_text(color = \"#404040\", family = \"Lato\"),     # Axis labels     axis.ticks = element_blank(),     axis.title.y = element_blank(),     axis.title.x = element_text(size = 20, vjust = -2.5),     axis.text.y.right = element_markdown(size = 14),     axis.text.x = element_text(size = 14, vjust = 0.5),     # Legend     legend.background = element_blank(),     legend.box.background = element_blank(),     legend.key = element_blank(),     legend.position = 'bottom',     legend.justification = 'left',     legend.direction = 'horizontal',     legend.margin = margin(10, 0, 15, 0),     legend.box.spacing = unit(0, \"pt\"),     # Title, subtitle, caption     plot.title = element_markdown(       lineheight = 1, size = 24, hjust = 0, vjust = 1, margin = margin(0, 0, -20, 0)),     plot.title.position = \"plot\",     plot.subtitle = element_markdown(       hjust = 1, margin = margin(-33, 3, -50, 0)),     plot.caption = element_markdown(       size = 12, margin = margin(30, 0, 0, 3)),     plot.caption.position = \"plot\",     # Facet     strip.background = element_rect(fill = \"#F47321\"),     strip.text = element_text(colour = \"black\", hjust = 0)   ) +   labs(title = PlotTitle, subtitle = PlotSubtitle, caption = PlotCaption,        x = \"Round\", y = \"\")"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Court team stats","text":"want create chart team showing field-goals percentage overall attempts court. Colours ranging #C70D3A (lower percentages) #2EB086) (high percentages) size hexagons ⬢ corresponding number attempts. Data can obtained getGamePoints function. Resulted plot can found bottom page.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Court team stats","text":"","code":"library(euroleaguer) library(tidyr) library(dplyr) library(ggplot2) library(ggtext) library(showtext) library(ggimage) library(glue) library(geomtextpath) library(hexbin)  # Add Lato font (Euroleague official font) font_add_google(\"Lato\", \"Lato\") font_add_google(\"Inconsolata\", \"Inconsolata\")  # Add Font Awesome for logos font_add(family = \"Font Awesome 6 Brands\",           regular = \"figures/fa-brands-400.ttf\") showtext_opts(dpi = 200) showtext_auto()"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Court team stats","text":"","code":"CompetitionRounds <- getCompetitionRounds(\"E2024\") %>%   filter(Sys.Date() >= MaxGameStartDate)  MaxRound <- max(CompetitionRounds$Round) MaxGameDate <- format(as.Date(max(CompetitionRounds$MaxGameStartDate)),                       '%d %b %Y')  CompetitionStandings <- getCompetitionStandings(\"E2024\", MaxRound) CompetitionGames <- getCompetitionGames(\"E2024\", CompetitionRounds$Round) %>%    filter(Status == \"result\") GamePoints <- getGamePoints(\"E2024\", CompetitionGames$GameCode)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"court","dir":"Articles","previous_headings":"","what":"Court","title":"Court team stats","text":"","code":"source(\"scripts/construct-court.R\") Court <- ConstructCourt()  # Define parameters for fitting coords into Court DistX <- 1.5; DistY <- DistX*sqrt(3)/2 CourtMinX <- min(Court$x); CourtMaxX <- max(Court$x) CourtMinY <- min(Court$y); CourtMaxY <- max(Court$y) nx <- ceiling((CourtMaxX - CourtMinX)/DistX) ny <- ceiling((CourtMaxY - CourtMinY)/DistY) Origin <- c(CourtMinX, CourtMinY)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"hexgrid","dir":"Articles","previous_headings":"","what":"Hexgrid","title":"Court team stats","text":"","code":"HexGrid <- tibble(   Hex_ID = 1:(nx*ny),   x = sort(c(rep(seq(from = 0, by = DistX, length.out = nx),                  each = ceiling(ny/2)),              rep(seq(from = DistX/2, by = DistX, length.out = nx),                  each = floor(ny/2)))) + Origin[1],   y = rep(c(seq(from = 0, by = 2*DistY, length.out = ceiling(ny/2)),             seq(from = DistY, by = DistX*sqrt(3),                 length.out = floor(ny/2))) + Origin[2], times = nx)) %>%   filter(x >= CourtMinX, x <= CourtMaxX)  x_grid <- sort(unique(HexGrid$x)) y_grid <- sort(unique(HexGrid$y))   # Create dataset for stats GamePoints <- GamePoints %>%   filter(Action_ID != \"FTM\") %>%   mutate(x = CoordX/100, y = CoordY/100 + 1.5,          x_court = case_when(x > max(Court$x) ~ max(Court$x),                               x < min(Court$x) ~ min(Court$x), TRUE ~ x),          y_court = case_when(y > max(Court$y) ~ max(Court$y),                               y < min(Court$y) ~ min(Court$y), TRUE ~ y),          rn = row_number()) %>%   select(TeamCode, GameCode, Player_ID, Action_ID, Action,           x_court, y_court, rn) %>%   mutate(x = cut(x_court, breaks = x_grid, dig.lab = max(nchar(x_grid))) %>%             gsub(\"\\\\(|\\\\]\", \"\", .),          y = cut(y_court, breaks = y_grid, dig.lab = max(nchar(y_grid))) %>%            gsub(\"\\\\(|\\\\]\", \"\", .)) %>%   separate_wider_delim(x, delim = \",\", names = c(\"x1\", \"x2\")) %>%   separate_wider_delim(y, delim = \",\", names = c(\"y1\", \"y2\")) %>%   pivot_longer(cols = c(\"x1\", \"x2\"), values_to = \"x\", names_to = \"x_name\") %>%   pivot_longer(cols = c(\"y1\", \"y2\"), values_to = \"y\", names_to = \"y_name\") %>%   mutate(x = as.numeric(x), y = as.numeric(y)) %>%   inner_join(HexGrid, by = c(\"x\", \"y\")) %>%   mutate(diff = (abs(x_court - x) + abs(y_court - y))/2) %>%   slice_min(order_by = diff, by = rn) %>%   group_by(TeamCode, Hex_ID, x, y) %>%   summarise(FGM = sum(ifelse(grepl(\"M\", Action_ID), 1, 0), na.rm = TRUE),             FGA = n(), .groups = \"drop\") %>%   group_by(Hex_ID) %>%   mutate(Value = ntile(FGM/FGA, 5),          FillValue = case_when(Value == 5 ~ \"High\", Value == 4 ~ \"Mid - High\",                                Value == 3 ~ \"Medium\", Value == 2 ~ \"Mid - Low\",                                Value == 1 ~ \"Low\", TRUE ~ NA)) %>%   ungroup() %>%   group_by(TeamCode) %>%   mutate(Hex_ID_Max_Area = max(FGA)) %>%   ungroup() %>%   mutate(Hex_Area = FGA/Hex_ID_Max_Area)  HexGridValues <- NULL for (i in 1:nrow(GamePoints)) {   TeamCode <- GamePoints[i,]$TeamCode   Hex_ID <- GamePoints[i,]$Hex_ID   Area <- as.numeric(GamePoints[i,]$Hex_Area)*((DistY*2/3)^2*3*sqrt(3)/2)   CenX <- as.numeric(GamePoints[i,]$x)   CenY <- as.numeric(GamePoints[i,]$y)    DelY <- sqrt(2*Area/sqrt(3)/3)   DelX <- DelY*sqrt(3)/2    HexGridValues <-     tibble(       Hex_x = c(CenX + 0, CenX + DelX, CenX + DelX,                 CenX + 0, CenX - DelX, CenX - DelX),       Hex_y = c(CenY - DelY, CenY - DelY/2, CenY + DelY/2,                 CenY + DelY, CenY + DelY/2, CenY - DelY/2)) %>%     bind_cols(TeamCode = TeamCode, Hex_ID = Hex_ID, .) %>%     bind_rows(HexGridValues, .) }"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"data-for-plot","dir":"Articles","previous_headings":"","what":"Data for plot","title":"Court team stats","text":"","code":"GamePoints <- GamePoints %>%   left_join(HexGridValues, by = c(\"TeamCode\", \"Hex_ID\")) %>%   left_join(CompetitionStandings %>%               select(TeamCode, TeamName, TeamImagesCrest, Position),             by = \"TeamCode\") %>%   arrange(Position) %>%   mutate(TeamName = glue(\"{TeamName} #{Position}\")) %>%   mutate(TeamName = factor(TeamName, levels = unique(.$TeamName)))"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"image-for-plot","dir":"Articles","previous_headings":"","what":"Image for plot","title":"Court team stats","text":"","code":"TeamImage <- GamePoints %>%   filter(!is.na(TeamImagesCrest)) %>%   distinct(TeamName, TeamImagesCrest) %>%   mutate(x = (CourtMinX + CourtMaxX)/2, y = CourtMaxY - 2)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"title-subtitle-and-caption","dir":"Articles","previous_headings":"","what":"Title, subtitle and caption","title":"Court team stats","text":"","code":"PlotTitle <- glue(   \"<span style = 'font-size: 32px'>Team court goals and accuracy<\/span><br>   <span style = 'font-size: 20px'>All teams | Up to round {MaxRound} | {MaxGameDate}<\/span>\")  PlotSubtitle <- glue(   \"<span><img src = 'figures/euroleague-logo-vertical.png'   height='50'><\/span>\")  PlotCaption <- glue(   \"<span>Visualization with <\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>R<\/span>   <span>and<\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>ggplot2<\/span>   <span>by Flavio Leccese |<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf09b;<\/span>   <span>flavioleccese92<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf08c;<\/span>   <span>flavioleccese<\/span>\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-court.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Court team stats","text":"","code":"# Initialize e <- GamePoints %>%   ggplot(aes(x = Hex_x, y = Hex_y))  # Add court polygon e <- e +   geom_path(     data = Court, aes(x = x, y = y, group = type),     linewidth = 0.1, colour = \"#404040\", alpha = 1)  # Add hexagons e <- e +   geom_polygon(     aes(group = Hex_ID, fill = FillValue), color = \"#eeede9\", alpha = 0.8)  # Facet by team + general theme setting e <- e +   scale_fill_manual(     name = \"Ranking\",     values = c(\"Low\" = \"#C70D3A\", \"Mid - Low\" = \"#FF7F00\", \"Medium\" = \"#FFD301\",                \"Mid - High\" = \"#7BB662\", \"High\" = \"#2EB086\")) +   geom_image(     data = TeamImage, aes(x = x, y = y, image = TeamImagesCrest), size = 0.2,     image_fun = function(img) { magick::image_crop(img) }) +   coord_fixed() +   facet_wrap(~ TeamName, ncol = 6) +   theme(     # General     panel.grid.major = element_blank(),     panel.grid.minor = element_blank(),     panel.background = element_rect_round(fill = \"#e2e7ea\"),     plot.background = element_rect(fill = \"#f2f2f2\", colour = \"transparent\"),     plot.margin = margin(28, 15, 8, 15),     text = element_text(color = \"#404040\", family = \"Lato\"),     # Axis labels     axis.ticks = element_blank(),     axis.title.y = element_blank(),     axis.text.y = element_blank(),     axis.title.x = element_blank(),     axis.text.x = element_blank(),     # Legend     legend.background = element_blank(),     legend.box.background = element_blank(),     legend.key = element_blank(),     legend.position = 'bottom',     legend.justification = 'left',     legend.direction = 'horizontal',     legend.margin = margin(10, 0, 3, 0),     legend.box.spacing = unit(0, \"pt\"),     # Title, subtitle, caption     plot.title = element_markdown(       lineheight = 1, size = 24, hjust = 0, vjust = 1, margin = margin(0, 0, -20, 0)),     plot.title.position = \"plot\",     plot.subtitle = element_markdown(       hjust = 1, margin = margin(-33, 3, -50, 0)),     plot.caption = element_markdown(       size = 12, margin = margin(-25, 0, 0, 3)),     plot.caption.position = \"plot\",     # Facets     strip.background = element_rect(fill = \"#F47321\"),     strip.text = element_text(colour = \"black\", hjust = 0)   ) +   labs(title = PlotTitle, subtitle = PlotSubtitle, caption = PlotCaption,        x = \"\", y = \"\")"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-radar.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Radar team stats","text":"want create chart team showing normalized ranking points (PTS), valuation (PIR), 2-points made (2PM), 2-points % (2P%), 3-points made (3PM), 3-points % (3P%), free-throws % (FT%), assists (AST), offensive rebounds (OREB), defensive rebounds (DREB), steals (STL), blocks (BLK), turnover (). Colours ranging #C70D3A #2EB086. Data can obtained getTeamStats function. Resulted plot can found bottom page.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-radar.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Radar team stats","text":"","code":"library(euroleaguer) library(tidyr) library(dplyr) library(ggplot2) library(ggtext) library(showtext) library(ggimage) library(glue) library(geomtextpath) library(hexbin)  # Add Lato font (Euroleague official font) font_add_google(\"Lato\", \"Lato\") font_add_google(\"Inconsolata\", \"Inconsolata\")  # Add Font Awesome for logos font_add(family = \"Font Awesome 6 Brands\",           regular = \"figures/fa-brands-400.ttf\") showtext_opts(dpi = 200) showtext_auto()"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-radar.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Radar team stats","text":"","code":"CompetitionRounds <- getCompetitionRounds(\"E2024\") %>%   filter(Sys.Date() >= MaxGameStartDate) %>%   slice_head(n = 1)  MaxRound <- max(CompetitionRounds$Round) MaxGameDate <- format(as.Date(max(CompetitionRounds$MaxGameStartDate)),                       '%d %b %Y')  CompetitionStandings <- getCompetitionStandings(\"E2024\", CompetitionRounds$Round) TeamStats <- getTeamStats(\"E2024\", CompetitionStandings$TeamCode)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-radar.html","id":"data-for-plot","dir":"Articles","previous_headings":"","what":"Data for plot","title":"Radar team stats","text":"","code":"# Pick stats stats <- c(\"PTS\", \"PIR\", \"2PM\", \"2P%\", \"3PM\", \"3P%\", \"FT%\", \"AST\",            \"OREB\", \"DREB\", \"STL\", \"BLK\", \"TO\")  # Create dataset for stats TeamStatsForPlot <- TeamStats$TeamAveragePerGame %>%   select(TeamCode, all_of(stats)) %>%   mutate(., across(all_of(stats), ~ ntile(., 5))) %>%   pivot_longer(cols = all_of(stats), names_to = \"Stat\", values_to = \"Value\") %>%   mutate(ActualValue = Value) %>%   group_by(TeamCode, Stat) %>%   complete(Value = -3:5) %>%   mutate(ActualValue = max(ActualValue, na.rm = TRUE)) %>%   ungroup() %>%   mutate(AlphaValue = case_when(     Value <= 0 ~ \"Empty\", Value == ActualValue ~ \"Actual\",     Value < ActualValue ~ \"Less\", TRUE ~ \"Empty\"),     FillValue = case_when(       Value == 5 ~ \"High\", Value == 4 ~ \"Mid - High\",       Value == 3 ~ \"Medium\", Value == 2 ~ \"Mid - Low\",       Value == 1 ~ \"Low\", TRUE ~ NA) %>%       factor(., levels = c(\"High\", \"Mid - High\", \"Medium\", \"Mid - Low\", \"Low\")),          GroupValue = factor(Value, levels = 5:-3),          SizeValue = ifelse(Value <= 0, \"Empty\", \"Colored\")) %>%   left_join(CompetitionStandings %>%                select(TeamCode, TeamName, Position, TeamImagesCrest),              by = \"TeamCode\") %>%   arrange(Position) %>%   mutate(Team = glue(\"{TeamName} #{Position}\")) %>%   mutate(Team = factor(Team, levels = unique(.$Team)),          Stat = factor(Stat, levels = stats))"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-radar.html","id":"image-for-plot","dir":"Articles","previous_headings":"","what":"Image for plot","title":"Radar team stats","text":"","code":"TeamImage <- TeamStatsForPlot %>%   filter(!is.na(TeamImagesCrest)) %>%   distinct(Team, TeamImagesCrest) %>%   mutate(Stat = 4, y = 0)"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-radar.html","id":"title-subtitle-and-caption","dir":"Articles","previous_headings":"","what":"Title, subtitle and caption","title":"Radar team stats","text":"","code":"PlotTitle <- glue(   \"<span style = 'font-size: 32px'>Team ranking by statistic<\/span><br>   <span style = 'font-size: 20px'>All teams | Up to round {MaxRound} |   {MaxGameDate}<\/span>\")  PlotSubtitle <- glue(   \"<span><img src = 'figures/euroleague-logo-vertical.png'   height='50'><\/span>\")  PlotCaption <- glue(   \"<span>Visualization with <\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>R<\/span>   <span>and<\/span>   <span style = 'font-family:\\\"Inconsolata\\\";'>ggplot2<\/span>   <span>by Flavio Leccese |<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf09b;<\/span>   <span>flavioleccese92<\/span>   <span style = 'font-family:\\\"Font Awesome 6 Brands\\\";'>&#xf08c;<\/span>   <span>flavioleccese<\/span>\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/articles/team-stats-radar.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Radar team stats","text":"","code":"# Initialize e <- ggplot(TeamStatsForPlot, aes(x = Stat))  # Draw background rectangles and Team image e <- e +   geom_rect(xmin = -Inf, xmax = +Inf, ymin = 0, ymax = 0.4, fill = \"#f2f2f2\") +   geom_image(data = TeamImage, aes(y = y, image = TeamImagesCrest), size = 0.25,              image_fun = function(img) { magick::image_crop(img) }) +   geom_rect(xmin = -Inf, xmax = +Inf, ymin = 0.4, ymax = 1, fill = \"#e2e7ea\")  # Draw bars of stats e <- e +   geom_bar(aes(y = 1, fill = FillValue, group = GroupValue,                alpha = AlphaValue, linewidth = SizeValue),            position = \"fill\", stat = \"identity\", colour = \"#f2f2f2\")  # Facet by team + general theme setting e <- e +   facet_wrap(~ Team, ncol = 6) +   scale_x_discrete() +   coord_curvedpolar(     clip = \"off\") +   scale_alpha_manual(     values = c(\"Actual\" = 1, \"Less\" = 0.25, \"Empty\" = 0), guide = \"none\") +   scale_linewidth_manual(     values = c(\"Empty\" = 0, \"Colored\" = 0.5), guide = \"none\") +   scale_fill_manual(     name = \"Ranking\",     values = c(\"Low\" = \"#C70D3A\", \"Mid - Low\" = \"#FF7F00\", \"Medium\" = \"#FFD301\",                \"Mid - High\" = \"#7BB662\", \"High\" = \"#2EB086\")) +   scale_hjust_manual(values = 0.8) +   theme(     # General     panel.grid.major = element_blank(),     panel.grid.minor = element_blank(),     panel.background = element_rect_round(fill = \"#e2e7ea\"),     plot.background = element_rect(fill = \"#f2f2f2\", colour = \"transparent\"),     plot.margin = margin(28, 15, 8, 15),     text = element_text(color = \"#404040\", family = \"Lato\"),     # Axis labels     axis.ticks = element_blank(),     axis.title.y = element_blank(),     axis.text.y = element_blank(),     axis.title.x = element_blank(),     axis.text.x = element_text(vjust = 0.5),     # Legend     legend.background = element_blank(),     legend.box.background = element_blank(),     legend.key = element_blank(),     legend.position = 'bottom',     legend.justification = 'left',     legend.direction = 'horizontal',     legend.margin = margin(10, 0, 3, 0),     legend.box.spacing = unit(0, \"pt\"),     # Title, subtitle, caption     plot.title = element_markdown(       lineheight = 1, size = 24, hjust = 0, vjust = 1, margin = margin(0, 0, -20, 0)),     plot.title.position = \"plot\",     plot.subtitle = element_markdown(       hjust = 1, margin = margin(-33, 3, -50, 0)),     plot.caption = element_markdown(       size = 12, margin = margin(-25, 0, 0, 3)),     plot.caption.position = \"plot\",     # Facets     strip.background = element_rect(fill = \"#F47321\"),     strip.text = element_text(colour = \"black\", hjust = 0)   )  +   labs(title = PlotTitle, subtitle = PlotSubtitle, caption = PlotCaption,        x = \"\", y = \"\")"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Flavio Leccese. Author, maintainer.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leccese F (2025). euroleaguer: Euroleague Eurocup basketball API. R package version 0.2.0, https://github.com/FlavioLeccese92/euroleaguer/.","code":"@Manual{,   title = {euroleaguer: Euroleague and Eurocup basketball API},   author = {Flavio Leccese},   year = {2025},   note = {R package version 0.2.0},   url = {https://github.com/FlavioLeccese92/euroleaguer/}, }"},{"path":"https://flavioleccese92.github.io/euroleaguer/index.html","id":"euroleaguer-","dir":"","previous_headings":"","what":"Euroleague and Eurocup basketball API","title":"Euroleague and Eurocup basketball API","text":"euroleaguer provides easy way retrieve data Euroleague Eurocup API R.  unofficial API wrapper recommend follow usual rules conduct dealing open API calls.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Euroleague and Eurocup basketball API","text":"get current released version CRAN: get current development version GitHub:","code":"install.packages(\"euroleaguer\") # install.packages(\"devtools\") devtools::install_github(\"FlavioLeccese92/euroleaguer\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/index.html","id":"why-an-r-package","dir":"","previous_headings":"","what":"Why an R package?","title":"Euroleague and Eurocup basketball API","text":"Despite Euroleague official APIs well designed immediate, intense analytical use demands adjustments terms get-requests output. euroleaguer possible input multiple arguments (handling loops internally), values returned tibbles columns consistent throughout functions, avoiding ambiguity stats naming 2FG% (2 field-goal %) 2P% (2 points %). short, saving time collection cleaning leaving pure analysis.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/index.html","id":"what-can-be-done","dir":"","previous_headings":"","what":"What can be done","title":"Euroleague and Eurocup basketball API","text":"package allows retrieve wide variety real-time historical data different types aggregation, particularly player, team game. Standard statistics available well advanced AST/(ratio assists made turnovers committed) AST-R (estimated % assists per player’s offensive possessions) many . Complete list can found . additional insightful information coordinates shots games can retrieved getGamePoints. interested data visualization, useful resources can found articles, create following plots:","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/dot-inheritParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Api internal functions — .inheritParams","title":"Api internal functions — .inheritParams","text":"Primitive Api wrapper functions exported since allow one call time. Instead, equivalent functions exposed allowing multiple parameters, making easier retrieve data users.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/dot-inheritParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Api internal functions — .inheritParams","text":"competition_code One competition codes. Admitted values E Euroleague U Eurocup. team_code One team codes obtained getCompetitionTeams(). Examples ASV, MAD, ... game_code One game codes obtained getCompetitionGames(). season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. round One round codes obtained getCompetitionRounds(). phase_type One phase type codes obtained getCompetitionPhases(). Admitted values RS regular season, PO playoffs FF final four. Default . subset One game subsets. Admitted values HomeGames, AwayGames, GamesWon, GamesLost, ResultsIn5Points (games resulted +/-5 points) . Default . statistic_mode One aggregation modes statistics. Admitted values perGame, perMinute accumulated.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionAheadBehind.html","id":null,"dir":"Reference","previous_headings":"","what":"Get competition ahead-behind standings — getCompetitionAheadBehind","title":"Get competition ahead-behind standings — getCompetitionAheadBehind","text":"Get competition ahead-behind standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionAheadBehind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get competition ahead-behind standings — getCompetitionAheadBehind","text":"","code":"getCompetitionAheadBehind(season_code, round)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionAheadBehind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get competition ahead-behind standings — getCompetitionAheadBehind","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. round One round codes obtained getCompetitionRounds().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionAheadBehind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get competition ahead-behind standings — getCompetitionAheadBehind","text":"Returns summary tibble ahead-behind chosen competition round Reference webpage: Ahead-behind standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionAheadBehind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get competition ahead-behind standings — getCompetitionAheadBehind","text":"","code":"if (FALSE) { # \\dontrun{  getCompetitionAheadBehind(season_code = c(\"E2023\", \"E2022\"), round = 1)  } # }"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionCalendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get competition calendar standings — getCompetitionCalendar","title":"Get competition calendar standings — getCompetitionCalendar","text":"Get competition calendar standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionCalendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get competition calendar standings — getCompetitionCalendar","text":"","code":"getCompetitionCalendar(season_code, round)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionCalendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get competition calendar standings — getCompetitionCalendar","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. round One round codes obtained getCompetitionRounds().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionCalendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get competition calendar standings — getCompetitionCalendar","text":"Returns summary tibble calendar standings chosen competitions rounds Reference webpage: Calendar standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionCalendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get competition calendar standings — getCompetitionCalendar","text":"","code":"if(interactive()) {  getCompetitionCalendar(season_code = c(\"E2023\", \"E2022\"), round = 1)  }"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMargins.html","id":null,"dir":"Reference","previous_headings":"","what":"Get competition margins standings — getCompetitionMargins","title":"Get competition margins standings — getCompetitionMargins","text":"Get competition margins standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMargins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get competition margins standings — getCompetitionMargins","text":"","code":"getCompetitionMargins(season_code, round)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMargins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get competition margins standings — getCompetitionMargins","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. round One round codes obtained getCompetitionRounds().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMargins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get competition margins standings — getCompetitionMargins","text":"Returns summary tibble standing margins chosen competition round Reference webpage: Margins standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMargins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get competition margins standings — getCompetitionMargins","text":"","code":"if (FALSE) { # \\dontrun{  getCompetitionMargins(season_code = c(\"E2023\", \"E2022\"), round = 1)  } # }"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Competition metadata — getCompetitionHistory","title":"Competition metadata — getCompetitionHistory","text":"Retrieve values arguments specific data collection functions across package.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competition metadata — getCompetitionHistory","text":"","code":"getCompetitionHistory(competition_code)  getCompetitionRounds(season_code)  getCompetitionPhases(season_code)  getCompetitionTeams(season_code)  getCompetitionGames(season_code, round, phase_type = \"All\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competition metadata — getCompetitionHistory","text":"competition_code One competition codes. Admitted values E Euroleague U Eurocup. season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. round One round codes obtained getCompetitionRounds(). phase_type One phase type codes obtained getCompetitionPhases(). Admitted values RS regular season, PO playoffs FF final four. Default .","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Competition metadata — getCompetitionHistory","text":"function, returns tibble information history, rounds, phases, teams games chosen season competition code.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Competition metadata — getCompetitionHistory","text":"","code":"if (FALSE) { # \\dontrun{  getCompetitionHistory(competition_code = c(\"E\", \"U\")) |> head(5)  getCompetitionRounds(season_code = c(\"E2023\", \"E2022\")) |> head(5)  getCompetitionPhases(season_code = c(\"E2023\", \"U2023\")) |> head(5)  getCompetitionTeams(season_code = c(\"E2023\", \"U2023\")) |> head(5)  getCompetitionGames(season_code = \"E2023\", round = 1:5) |> head(5)  } # }"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStandings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get competition traditional standings — getCompetitionStandings","title":"Get competition traditional standings — getCompetitionStandings","text":"Get competition traditional standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStandings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get competition traditional standings — getCompetitionStandings","text":"","code":"getCompetitionStandings(season_code, round)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStandings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get competition traditional standings — getCompetitionStandings","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. round One round codes obtained getCompetitionRounds().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStandings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get competition traditional standings — getCompetitionStandings","text":"Returns summary tibble standings chosen competitions rounds Reference webpage: Traditional standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStandings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get competition traditional standings — getCompetitionStandings","text":"","code":"if (FALSE) { # \\dontrun{  getCompetitionStandings(season_code = c(\"E2023\", \"E2022\"), round = 1)  } # }"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStreaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get competition streaks standings — getCompetitionStreaks","title":"Get competition streaks standings — getCompetitionStreaks","text":"Get competition streaks standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStreaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get competition streaks standings — getCompetitionStreaks","text":"","code":"getCompetitionStreaks(season_code, round)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStreaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get competition streaks standings — getCompetitionStreaks","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. round One round codes obtained getCompetitionRounds().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStreaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get competition streaks standings — getCompetitionStreaks","text":"Returns summary tibble streaks chosen competitions rounds Reference webpage: Streaks standings","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getCompetitionStreaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get competition streaks standings — getCompetitionStreaks","text":"","code":"if (FALSE) { # \\dontrun{  getCompetitionStreaks(season_code = c(\"E2023\", \"E2022\"), round = 1)  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameBoxScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get game box-score — getGameBoxScore","text":"","code":"getGameBoxScore(season_code, game_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameBoxScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get game box-score — getGameBoxScore","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. game_code One game codes obtained getCompetitionGames().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameBoxScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get game box-score — getGameBoxScore","text":"Returns list elements chosen games seasons Team. Name teams Coach. Name coaches EndOfQuarter. Team accumulated points quarter ByQuarter. Team points quarter PlayerStats. Statistics player game TeamStats. Aggregated statistics team game Glossary columns: Reference webpage: BoxScore","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameBoxScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get game box-score — getGameBoxScore","text":"","code":"if (FALSE) { # \\dontrun{  getGameBoxScore(season_code = c(\"E2023\", \"U2023\"), game_code = 1)  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameEvolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get game evolution — getGameEvolution","text":"","code":"getGameEvolution(season_code, game_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameEvolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get game evolution — getGameEvolution","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. game_code One game codes obtained getCompetitionGames().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameEvolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get game evolution — getGameEvolution","text":"Returns list two elements chosen games seasons EvolutionSummary. Overall information minimum maximum difference scores teams Evolution. Minute minute points team Reference webpage: GraphicStats","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameEvolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get game evolution — getGameEvolution","text":"","code":"if (FALSE) { # \\dontrun{  getGameEvolution(season_code = c(\"E2023\", \"U2023\"), game_code = 1)  } # }"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Game metadata — getGameHeader","title":"Game metadata — getGameHeader","text":"Retrieve contextual information games. Outputs may required arguments getGame* functions","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Game metadata — getGameHeader","text":"","code":"getGameHeader(season_code, game_code)  getGamePlayers(season_code, game_code, team_code)  getGameRound(season_code, game_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Game metadata — getGameHeader","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. game_code One game codes obtained getCompetitionGames(). team_code One team codes obtained getCompetitionTeams(). Examples ASV, MAD, ...","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Game metadata — getGameHeader","text":"function, returns tibble information header, player round chosen season game code.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGameMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Game metadata — getGameHeader","text":"","code":"if (FALSE) { # \\dontrun{  getGameHeader(season_code = c(\"E2023\", \"U2023\"), game_code = 1)  getGamePlayers(season_code = c(\"E2023\", \"U2023\"), team_code = \"ASV\", game_code = 1)  getGameRound(season_code = c(\"E2023\", \"U2023\"), game_code = 1)  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePlayByPlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get game play-by-play — getGamePlayByPlay","text":"","code":"getGamePlayByPlay(season_code, game_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePlayByPlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get game play-by-play — getGamePlayByPlay","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. game_code One game codes obtained getCompetitionGames().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePlayByPlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get game play-by-play — getGamePlayByPlay","text":"Returns list two elements chosen games seasons PlayByPlaySummary. Overall information games, teams involved status (live ) PlayByPlay. Detailed information games, particularly NumberOfPlay PlayType Glossary PlayType: Reference webpage: PlayByPlay","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePlayByPlay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get game play-by-play — getGamePlayByPlay","text":"","code":"if (FALSE) { # \\dontrun{  PlayByPlay = getGamePlayByPlay(season_code = c(\"E2023\", \"U2023\"), game_code = 1)  PlayByPlay$PlayByPlaySummary |> head(5)  PlayByPlay$PlayByPlay |> head(5)  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get game points — getGamePoints","text":"","code":"getGamePoints(season_code, game_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get game points — getGamePoints","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. game_code One game codes obtained getCompetitionGames().","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get game points — getGamePoints","text":"Returns scoring information player chosen games seasons (subset play--play data). particular: NumberOfPlay. Reference id action (useful join results getPlayByPlay) CoordX CoordY. Spatial coordinates shot Zone. Area court shot Reference webpage: PlayByPlay","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getGamePoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get game points — getGamePoints","text":"","code":"if (FALSE) { # \\dontrun{  getGamePoints(season_code = c(\"E2023\", \"U2023\"), game_code = 1)  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerAdvanced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get player advanced statistics — getPlayerAdvanced","text":"","code":"getPlayerAdvanced(   season_code,   statistic_mode = c(\"perGame\", \"perMinute\", \"accumulated\") )"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerAdvanced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get player advanced statistics — getPlayerAdvanced","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. statistic_mode One aggregation modes statistics. Admitted values perGame, perMinute accumulated.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerAdvanced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get player advanced statistics — getPlayerAdvanced","text":"Returns summary tibble advanced players statistics chosen seasons. Glossary columns: Reference webpage: Stats","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerAdvanced.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get player advanced statistics — getPlayerAdvanced","text":"","code":"if (FALSE) { # \\dontrun{  getPlayerAdvanced(season_code = \"E2023\", statistic_mode = \"perGame\")  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerMisc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get player miscellaneous statistics — getPlayerMisc","text":"","code":"getPlayerMisc(season_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerMisc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get player miscellaneous statistics — getPlayerMisc","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerMisc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get player miscellaneous statistics — getPlayerMisc","text":"Returns summary tibble miscellaneous players statistics chosen seasons. Glossary columns: Reference webpage: Stats","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerMisc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get player miscellaneous statistics — getPlayerMisc","text":"","code":"if (FALSE) { # \\dontrun{  getPlayerMisc(season_code = \"E2023\")  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get player points statistics — getPlayerPoints","text":"","code":"getPlayerPoints(season_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get player points statistics — getPlayerPoints","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get player points statistics — getPlayerPoints","text":"Returns summary tibble points players statistics chosen seasons. Glossary columns: Reference webpage: Stats","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get player points statistics — getPlayerPoints","text":"","code":"if (FALSE) { # \\dontrun{  getPlayerPoints(season_code = \"E2023\")  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get player statistics — getPlayerStats","text":"","code":"getPlayerStats(   season_code,   statistic_mode = c(\"perGame\", \"perMinute\", \"accumulated\") )"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get player statistics — getPlayerStats","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. statistic_mode One aggregation modes statistics. Admitted values perGame, perMinute accumulated.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get player statistics — getPlayerStats","text":"Returns summary tibble players statistics chosen seasons. Glossary columns: Reference webpage: Stats","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getPlayerStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get player statistics — getPlayerStats","text":"","code":"if (FALSE) { # \\dontrun{  getPlayerStats(season_code = \"E2023\", statistic_mode = \"perGame\")  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamLeadStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get team lead statistics — getTeamLeadStats","text":"","code":"getTeamLeadStats(season_code, phase_type = \"All\", subset = \"All\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamLeadStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get team lead statistics — getTeamLeadStats","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. phase_type One phase type codes obtained getCompetitionPhases(). Admitted values RS regular season, PO playoffs FF final four. Default . subset One game subsets. Admitted values HomeGames, AwayGames, GamesWon, GamesLost, ResultsIn5Points (games resulted +/-5 points) . Default .","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamLeadStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get team lead statistics — getTeamLeadStats","text":"Returns list elements chosen seasons, phase_type subset. TeamAccumulated. Total sum statistics teams team TeamAveragePerGame. Average per game statistics teams Glossary columns: Reference webpage: TeamLead","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamLeadStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get team lead statistics — getTeamLeadStats","text":"","code":"if (FALSE) { # \\dontrun{    TeamLeadStats = getTeamLeadStats(season_code = c(\"E2022\", \"E2023\"), phase_type = \"RS\")    TeamLeadStats$TeamAccumulated |> head(5)    TeamLeadStats$TeamAveragePerGame |> head(5)  } # }"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Team metadata — getTeam","title":"Team metadata — getTeam","text":"Retrieve contextual information teams. Outputs may required arguments getTeam* getPlayer* functions.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Team metadata — getTeam","text":"","code":"getTeam(season_code, team_code)  getTeamPeople(season_code, team_code)  getTeamGames(season_code, team_code)"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Team metadata — getTeam","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. team_code One team codes obtained getCompetitionTeams(). Examples ASV, MAD, ...","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Team metadata — getTeam","text":"function, returns tibble information team, people games chosen season team code.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Team metadata — getTeam","text":"","code":"if (FALSE) { # \\dontrun{  getTeam(team_code = \"ASV\", season_code = c(\"E2023\", \"E2022\")) |> head(5)  getTeamPeople(team_code = \"ASV\", season_code = c(\"E2023\", \"E2022\")) |> head(5)  getTeamGames(team_code = \"ASV\", season_code = c(\"E2023\", \"E2022\")) |> head(5)  } # }"},{"path":[]},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get team statistics — getTeamStats","text":"","code":"getTeamStats(season_code, team_code, phase_type = \"All\")"},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get team statistics — getTeamStats","text":"season_code One season codes obtained getCompetitionHistory(). Examples E2023 Euroleague U2023 Eurocup 2023. team_code One team codes obtained getCompetitionTeams(). Examples ASV, MAD, ... phase_type One phase type codes obtained getCompetitionPhases(). Admitted values RS regular season, PO playoffs FF final four. Default .","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get team statistics — getTeamStats","text":"Returns list elements chosen teams seasons: PlayerAccumulated. Total sum statistics player PlayerAveragePerGame. Average per game statistics player PlayerAveragePer40. Average per 40 minutes statistics player TeamAccumulated. Total sum statistics team TeamAveragePerGame. Average per game statistics teams Glossary columns: Reference webpage: Team","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/reference/getTeamStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get team statistics — getTeamStats","text":"","code":"if (FALSE) { # \\dontrun{    TeamStats = getTeamStats(team_code = \"ASV\", season_code = c(\"E2023\", \"E2022\"), phase_type = \"RS\")    TeamStats$PlayerAccumulated |> head(5)    TeamStats$PlayerAveragePerGame |> head(5)    TeamStats$PlayerAveragePer40 |> head(5)    TeamStats$TeamAccumulated |> head(5)    TeamStats$TeamAveragePerGame |> head(5)  } # }"},{"path":"https://flavioleccese92.github.io/euroleaguer/news/index.html","id":"euroleaguer-021","dir":"Changelog","previous_headings":"","what":"euroleaguer 0.2.1","title":"euroleaguer 0.2.1","text":"Added NEWS.md file track changes package. Fixed .getCompetitionGames: now possible retrieve metadata future games, previously failing referees information present. Cleaned internal code: dropped .$data dplyr references columns.","code":""},{"path":"https://flavioleccese92.github.io/euroleaguer/news/index.html","id":"euroleaguer-020","dir":"Changelog","previous_headings":"","what":"euroleaguer 0.2.0","title":"euroleaguer 0.2.0","text":"CRAN release: 2024-02-23 Initial release package.","code":""}]
